/*
 *  gcml2 -- an implementation of Eric Raymond's CML2 in C
 *  Copyright (C) 2000-2001 Greg Banks
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Library General Public
 *  License as published by the Free Software Foundation; either
 *  version 2 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Library General Public License for more details.
 *
 *  You should have received a copy of the GNU Library General Public
 *  License along with this library; if not, write to the Free
 *  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
 
#ifndef _dnf_h_
#define _dnf_h_ 1

#include <glib.h>

/*
 * Package for handling CML1 expressions in Disjunctive Normal Form,
 * which is useful for detecting branches with overlapping conditions.
 */

typedef GList dnf_t;

/*
 * Convert a gcml2 expression into a dnf_t.  Only handles the
 * subset of expressions generated by the CML1 parser.
 */
extern dnf_t *dnf_from_expr(const cml_expr *expr);

/*
 * Returns a list of new strings each of which describes
 * a set of variable bindings which will cause an overlap.
 * The strings need to be g_free()d.
 */
extern GList *dnf_overlap(const dnf_t *d1, const dnf_t *d2);

/*
 * Free all storage for a dnf_t structure.
 */
extern void dnf_free(dnf_t *dnf);

#endif /* _dnf_h_ */
